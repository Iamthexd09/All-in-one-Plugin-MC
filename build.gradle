plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.allinone'
version = '1.0.0'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    
    // Spigot Repository
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    
    // Vault Repository
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
    
    // PlaceholderAPI Repository
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    // Spigot API
    compileOnly 'org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT'
    
    // Vault API (Opcional)
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    
    // PlaceholderAPI (Opcional)
    compileOnly 'me.clip:placeholderapi:2.11.3'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveClassifier.set('')
    relocate 'org.sqlite', 'com.allinone.libs.sqlite'
}

build {
    dependsOn shadowJar
}